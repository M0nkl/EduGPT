# find_working_models.py
import requests
from config import settings


def test_model(model_name, api_key):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –º–æ–¥–µ–ª—å –Ω–∞ Hugging Face"""
    url = f"https://api-inference.huggingface.co/models/{model_name}"
    headers = {"Authorization": f"Bearer {api_key}"}

    # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç
    data = {
        "inputs": "–û—Ç–≤–µ—Ç—å –æ–¥–Ω–∏–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º: –ß—Ç–æ —Ç–∞–∫–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ?",
        "parameters": {"max_new_tokens": 50}
    }

    try:
        print(f"üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º: {model_name}")
        response = requests.post(url, headers=headers, json=data, timeout=30)

        if response.status_code == 200:
            result = response.json()
            answer = result[0]['generated_text'][:100] if isinstance(result, list) else str(result)[:100]
            print(f"   ‚úÖ –†–ê–ë–û–¢–ê–ï–¢: {answer}")
            return True, url
        elif response.status_code == 503:
            print(f"   ‚è≥ –ú–û–î–ï–õ–¨ –ó–ê–ì–†–£–ñ–ê–ï–¢–°–Ø (503)")
            return True, url  # –ú–æ–¥–µ–ª—å –µ—Å—Ç—å, –Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ {response.status_code}: {response.text[:100]}")
            return False, None

    except Exception as e:
        print(f"   üí• –û—à–∏–±–∫–∞: {e}")
        return False, None


# –°–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ —Ä–∞–±–æ—Ç–∞—é—Ç
MODELS_TO_TEST = [
    # –†—É—Å—Å–∫–∏–µ –º–æ–¥–µ–ª–∏
    "sberbank-ai/rugpt3small_based_on_gpt2",
    "sberbank-ai/rugpt3medium_based_on_gpt2",
    "sberbank-ai/rugpt3large_based_on_gpt2",
    "ai-forever/rugpt3large_based_on_gpt2",
    "DeepPavlov/rubert-base-cased",
    "cointegrated/rubert-tiny2",

    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–µ –º–æ–¥–µ–ª–∏ (–º–æ–≥—É—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º)
    "microsoft/DialoGPT-medium",
    "microsoft/DialoGPT-large",
    "gpt2",
    "gpt2-medium",
    "distilgpt2",
    "facebook/blenderbot-400M-distill",
    "microsoft/DialoGPT-small",

    # –ú–Ω–æ–≥–æ—è–∑—ã—á–Ω—ã–µ –º–æ–¥–µ–ª–∏
    "facebook/m2m100_418M",
    "google/mt5-small",

    # –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –º–æ–¥–µ–ª–∏ –¥–ª—è –≤–æ–ø—Ä–æ—Å-–æ—Ç–≤–µ—Ç
    "deepset/roberta-base-squad2",
    "bert-large-uncased-whole-word-masking-finetuned-squad",
]


def find_working_models():
    api_key = settings.HUGGINGFACE_API_KEY
    working_models = []

    print("üîç –ò—â–µ–º —Ä–∞–±–æ—Ç–∞—é—â–∏–µ –º–æ–¥–µ–ª–∏...")

    for model in MODELS_TO_TEST:
        works, url = test_model(model, api_key)
        if works:
            working_models.append((model, url))

    print(f"\nüéØ –ù–ê–ô–î–ï–ù–û –†–ê–ë–û–¢–ê–Æ–©–ò–• –ú–û–î–ï–õ–ï–ô: {len(working_models)}")
    for model, url in working_models:
        print(f"   üìç {model}")
        print(f"   üîó {url}")

    return working_models


if __name__ == "__main__":
    find_working_models()